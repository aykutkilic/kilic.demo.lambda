grammar kilic.demo.lambda.Lambda hidden(WS)
generate lambda "http://www.demo.kilic/lambda/Lambda"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program: term=Term;

// left associative
Term:
	TerminalTerm (=>({Application.fun=current} arg=TerminalTerm)*);

TerminalTerm returns Term:
	'(' Term ')' |	Constant |	Variable |	Abstraction;
	
Constant: letter=LOWERCASE;
Variable: ref=[Parameter|PARAMNAME];

Abstraction:	'l' param=Parameter '.' term=Term;
Parameter:		name=PARAMNAME ':' type=Type;

// right associative
Type:	TerminalType ({ArrowType.left = current} '->' right=Type)?;

TerminalType returns Type:
	'(' Type ')' |	BasicType;

BasicType:	letter=UPPERCASE;

terminal PARAMNAME	: 'x'|'y'|'z'|'t'|'f'|'g'|'h'|'k';
terminal LOWERCASE	: 'a'..'e';
terminal UPPERCASE	: 'A'..'E';
terminal WS			: (' '|'\t'|'\r'|'\n')+;